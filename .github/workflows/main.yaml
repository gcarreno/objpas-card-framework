name: Cards

defaults:
  run:
    shell: bash

permissions:
  contents: write

on:

  push:
    branches: [ main ]
    tags: [ "*" ]
    paths-ignore: [ "README.md", "LICENSE", "CHANGELOG.md", "cliff.toml" ]

  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build Examples
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ ubuntu-latest, windows-latest, macos-latest ]
        lazarus-versions: [ stable, 3.4 ]
      fail-fast: true

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Install Lazarus
      uses: gcarreno/setup-lazarus@v3
      with:
        lazarus-version: ${{ matrix.lazarus-versions }}
        with-cache: false

    - name: Compile the package
      run: lazbuild -B "packages/Lazarus/fp_card_framework.lpk"

    - name: Build the Examples
      run: |
        lazbuild -B --bm=Release "examples/simple-klondike/klondike.lpi"

    - name: Upload binary
      if: ${{ matrix.lazarus-versions == 'stable' }}
      uses: actions/upload-artifact@v4
      with:
        name: examples-${{ matrix.operating-system }}
        path: |
          bin/klondike
          bin/klondike.exe

  test:
    name: Test Cards Framework
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ ubuntu-latest, windows-latest, macos-latest ]
        lazarus-versions: [ stable, 3.4 ]
      fail-fast: true

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Install Lazarus
      uses: gcarreno/setup-lazarus@v3
      with:
        lazarus-version: ${{ matrix.lazarus-versions }}
        with-cache: false

    - name: Compile the package
      run: lazbuild -B "packages/Lazarus/fp_card_framework.lpk"

    - name: Build the test application
      run: lazbuild -B --bm=Release "tests/testframework_cli.lpi"

    - name: Run the tests
      run: bin/testframework_cli --all --format=plain

  release:
    if: contains(github.ref_type, 'tag')

    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [ build, test ]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Set env
      run: echo "tag=${{ github.ref_name }}" >> "$GITHUB_ENV"

    - name: Download Ubuntu
      uses: actions/download-artifact@v4
      with:
        name: examples-ubuntu-latest
        path: examples-ubuntu-latest

    - name: Download Windows
      uses: actions/download-artifact@v4
      with:
        name: examples-windows-latest
        path: examples-windows-latest

    - name: Download Darwin
      uses: actions/download-artifact@v4
      with:
        name: examples-macos-latest
        path: examples-macos-latest

    - name: List files
      run: ls -alF examples-*-latest

    - name: Create release files
      run: |
        echo Ubuntu
        pushd examples-ubuntu-latest
        chmod +x klondike
        tar -zcvf examples-${{ env.tag }}-x86_64-linux.tar.gz klondike
        popd
        echo Windows
        pushd examples-windows-latest
        zip -r examples-${{ env.tag }}-x86_64-win64.zip klondike.exe
        popd
        echo Darwin
        pushd examples-macos-latest
        chmod +x klondike
        tar -zcvf examples-${{ env.tag }}-x86_64-darwin.tar.gz klondike
        popd

    - name: Generate Release Notes
      id: git-cliff
      uses: orhun/git-cliff-action@main
      with:
        config: cliff.toml
        args: --latest --strip header

    - name: Create GitHub release
      uses: softprops/action-gh-release@v2
      with:
        name: Cards ${{ env.tag }}
        body: ${{ steps.git-cliff.outputs.content }}
        files: |
          examples-ubuntu-latest/*.tar.gz
          examples-macos-latest/*.tar.gz
          examples-windows-latest/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
